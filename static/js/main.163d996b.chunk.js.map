{"version":3,"sources":["components/Web3Info/Web3Info.module.scss","components/Hero/Hero.module.scss","App.module.scss","../config/webpack.js","utils/getWeb3.js","components/Header/index.js","components/Footer/index.js","components/Hero/index.js","components/Web3Info/index.js","utils/theme.js","data/testWalletAddress.js","components/GasFeePool/index.js","components/MetaTransactionTest/index2.js","App.js","serviceWorker.js","index.js","components/Header/header.module.scss","components/Footer/footer.module.scss"],"names":["module","exports","web3","dataPoint","value","Hero","hwrapper","left","right","sellingpoints","feature","ctas","mainLink","App","wrapper","setup","contracts","notice","widgets","loader","App-logo-spin","zeppelinSolidityHotLoaderOptions","network","disabled","zeppelinSolidityHotLoader","test","use","options","require","config","process","INFURA_API_KEY","getGanacheWeb3","Header","react_default","a","createElement","className","styles","header","id","href","link","style","padding","Footer","footer","brand","created","copyright","Component","createMuiTheme","palette","primary","dark","blueGrey","light","main","secondary","green","walletAddressList","addressList","address1","address2","address3","address4","GasFeePool","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rTokenInfo","asyncToGenerator","regenerator_default","mark","_callee","_this$state","gas_fee_pool","response","wrap","_context","prev","next","state","accounts","methods","sent","console","log","stop","createHatAddRecipients","_callee2","_this$state2","createHatRecipientsList","valueOfCreateHatRecipients","_context2","push","setState","abrupt","createHatAddProportions","_callee3","_this$state3","createHatProportionsList","valueOfCreateHatProportions","_context3","createHat","_callee4","_this$state4","_recipients","_proportions","_context4","_createHat","send","from","getHatByID","_callee5","_this$state5","_context5","_getHatByID","getHatByAddress","_callee6","_this$state6","_context6","_getHatByAddress","approve","_callee7","_this$state7","_context7","_approve","allowance","_callee8","_this$state8","_context8","_allowance","mintWithSelectedHat","_callee9","_this$state9","dai","rDAI","rDAI_address","valueOfMintWithSelectedHatMintAmount","valueOfMintWithSelectedHatHatID","_mintAmount","_hatID","mintAmount","_spender","approved","_context9","gas_fee_pool_address","utils","toWei","toString","mintWithNewHatAddRecipients","_callee10","_this$state10","mintWithNewHatRecipientsList","valueOfMintWithNewHatRecipients","_context10","mintWithNewHatAddProportions","_callee11","_this$state11","mintWithNewHatProportionsList","valueOfMintWithNewHatProportions","_context11","mintWithNewHat","_callee12","_this$state12","valueOfMintWithNewHatMintAmount","_context12","interestPayableOf","_callee13","_this$state13","_owner","interestPayableOfAmount","_context13","redeem","_callee14","_this$state14","valueOfRedeemTokens","_redeemTokens","redeemTokens","_context14","redeemAll","_callee15","_this$state15","_context15","_redeemAll","redeemAndTransfer","_callee16","_this$state16","valueOfRedeemAndTransferRedeemTo","valueOfRedeemAndTransferRedeemTokens","_redeemTo","_context16","_redeemAndTransfer","redeemAndTransferAll","_callee17","_this$state17","valueOfRedeemAndTransferAllRedeemTo","_context17","_redeemAndTransferAll","getHatStats","_callee18","_this$state18","_context18","_getHatStats","balanceOf","_callee19","_this$state19","_context19","_balanceOf","underlying","_callee20","_this$state20","_context20","_underlying","addRelayer","_callee21","_this$state21","relayer_manager","valueOfAddRelayer","_relayerAddress","relayer","_context21","relay_hub","getAllRelayers","_callee22","_this$state22","relayers","_context22","getRelayerStatus","_callee23","_this$state23","relayerStatus","_context23","getTestData","_callee24","_this$state24","_currentAccount","balanceOf1","balanceOf2","_context24","balanceOfCurrentAccount","testFunc","transferDAIFromUserToContract","_callee25","_this$state25","gasFeePoolAddress","_amount","_to","response2","_context25","Math","pow","transfer","refreshValues","instanceGasFeePool","getGanacheAddresses","_callee26","_context26","ganacheProvider","eth","getAccounts","componentDidMount","_callee27","hotLoaderDisabled","Dai","RelayHub","RelayerManager","MetaTransactionTest","ganacheAccounts","networkId","networkType","isMetaMask","balance","deployedNetwork","instanceDai","GasFeePoolAddress","instanceRDai","rDaiAddress","instanceRelayHub","instanceRelayerManager","instanceMetaTransactionTest","_context27","e","t0","net","getId","getNetworkType","currentProvider","length","getBalance","t1","fromWei","networks","Contract","abi","address","defineProperty","setInterval","t2","alert","error","storageValue","route","window","location","pathname","replace","bind","assertThisInitialized","handleInputAddRelayer","handleInputCreateHatRecipients","handleInputCreateHatProportions","handleInputMintWithSelectedHatMintAmount","handleInputMintWithSelectedHatHatID","handleInputMintWithNewHatMintAmount","handleInputMintWithNewHatRecipients","handleInputMintWithNewHatProportions","handleInputRedeemTokens","handleInputRedeemAndTransferRedeemTo","handleInputRedeemAndTransferRedeemTokens","handleInputRedeemAndTransferAllRedeemTo","_ref28","target","_ref29","_ref30","Number","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","_this$state26","Grid","container","marginTop","item","xs","index_es","width","maxWidth","mx","my","p","borderColor","type","placeholder","onChange","size","mt","mb","onClick","mainColor","step","sigUtil","executeMetaTransactionTest","meta_transaction_test","valueOfExecuteMetaTransactionTestNewText","_newText","domainType","metaTransactionType","domainData","setText","valueOfSetTextNewText","newText","selectedAddress","userAddress","nonce","functionSignature","message","dataToSign","getNonce","encodeABI","parseInt","JSON","stringify","types","EIP712Domain","MetaTransaction","domain","primaryType","jsonrpc","method","params","info","concat","result","_this$getSignaturePar","getSignatureParameters","r","s","v","recovered","recoverTypedSignature_v4","data","parse","sig","sendTransaction","on","hash","once","confirmationNumber","receipt","getTextFromNetwork","signature","isHexStrict","Error","slice","hexToNumber","includes","getText","then","undefined","currentText","currentOwner","setOwner","showErrorMessage","NotificationManager","showSuccessMessage","_ref3","success","_x","apply","arguments","showInfoMessage","_ref4","functionData","gasLimit","gasPrice","executeMetaTransaction","estimateGas","getGasPrice","toHex","_x2","_x3","_x4","_x5","_x6","MetaTransactionTestAddress","name","version","verifyingContract","handleInputExecuteMetaTransactionTestNewText","handleInputSetTextNewText","_ref7","_ref8","interval","clearInterval","color","instructionsKey","Hero_Hero","GasFeePool_GasFeePool","index2_MetaTransactionTest","components_Header","renderInstructions","renderGasFeePool","renderMetaTransactionTest","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","links"],"mappings":"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","file":"static/js/main.163d996b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"web3\":\"Web3Info_web3__2VZLJ\",\"dataPoint\":\"Web3Info_dataPoint__x1P_E\",\"value\":\"Web3Info_value__1iPQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hero\":\"Hero_Hero__j1FNa\",\"hwrapper\":\"Hero_hwrapper__1H41H\",\"left\":\"Hero_left__3h7_L\",\"right\":\"Hero_right__1nraz\",\"sellingpoints\":\"Hero_sellingpoints__1ir2z\",\"feature\":\"Hero_feature__27p4A\",\"ctas\":\"Hero_ctas__2Zi7J\",\"mainLink\":\"Hero_mainLink__3G85c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1SNG3\",\"wrapper\":\"App_wrapper__2qlp9\",\"setup\":\"App_setup__3Ez7V\",\"contracts\":\"App_contracts__3VN4S\",\"notice\":\"App_notice__3tmJN\",\"widgets\":\"App_widgets__3UXxm\",\"loader\":\"App_loader__1ri_z\",\"App-logo-spin\":\"App_App-logo-spin__BwM8O\"};","var zeppelinSolidityHotLoaderOptions = {\n  network: 'development',\n  // you can stop loader from automatic compile/push/updgrade\n  // action by setting disabled flag to true, but it will still\n  // serve .json files from file system\n  disabled: true\n};\nmodule.exports = {\n  zeppelinSolidityHotLoader: {\n    test: /\\.sol$/,\n    use: [{\n      loader: 'json-loader'\n    }, {\n      loader: 'zeppelin-solidity-hot-loader',\n      options: zeppelinSolidityHotLoaderOptions\n    }]\n  },\n  zeppelinSolidityHotLoaderOptions: zeppelinSolidityHotLoaderOptions\n};","import Web3 from \"web3\";\nrequire('dotenv').config();\nconst INFURA_API_KEY = process.env.INFURA_API_KEY;\n\n//const FALLBACK_WEB3_PROVIDER = process.env.REACT_APP_NETWORK || 'https://rinkeby.infura.io/v3/' + INFURA_API_KEY;    // Rinkeby\nconst FALLBACK_WEB3_PROVIDER = process.env.REACT_APP_NETWORK || 'http://0.0.0.0:7545';                                 // Ganache-GUI\n//const FALLBACK_WEB3_PROVIDER = process.env.REACT_APP_NETWORK || 'http://0.0.0.0:8545';\n\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          FALLBACK_WEB3_PROVIDER\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Infura/Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nconst getGanacheWeb3 = () => {\n  const isProd = process.env.NODE_ENV === 'production';\n  if (isProd) {\n    return null;\n  }\n  const provider = new Web3.providers.HttpProvider(\n    'https://kovan.infura.io/v3/' + INFURA_API_KEY  // Rinkeby\n    //'http://0.0.0.0:7545'  // Ganache-GUI\n    //'http://0.0.0.0:8545'  // Ganache-CLI\n  );\n  const web3 = new Web3(provider);\n  console.log(\"No local ganache found.\");\n  return web3;\n}\n\nexport default getWeb3;\nexport { getGanacheWeb3, Web3 };\n","import React from 'react';\nimport styles from './header.module.scss';\n\nconst Header = () => (\n  <div className={styles.header}>\n    <nav id=\"menu\" className=\"menu\">\n      <ul>\n        <li><a href=\"/\" className={styles.link}><span style={{ padding: \"60px\" }}> Home </span></a></li>\n\n        <li><a href=\"/gas-fee-pool\" className={styles.link}> Gas Fee Pool</a></li>\n\n        <li><a href=\"/meta-transaction-test\" className={styles.link}> Meta-Transaction Test</a></li>\n      </ul>\n    </nav>\n  </div>\n)\n\nexport default Header;\n","import React from 'react';\nimport styles from './footer.module.scss';\n\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <div className={styles.brand}>\n      <div className={styles.created}>\n        Created by masaun\n      </div>\n      <div className={styles.copyright}>\n        Copyright © masaun\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport styles from './Hero.module.scss';\n\n\nexport default class Hero extends Component {\n  render()  {\n    return (\n      <div className={styles.left}>\n        <br />\n        <h4> Top Page</h4>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { EthAddress, Blockie } from 'rimble-ui';\nimport styles from './Web3Info.module.scss';\n\nexport default class Web3Info extends Component {\n\n  renderNetworkName(networkId) {\n    switch (networkId) {\n      case 3:\n        return 'Ropsten';\n      case 4:\n        return 'Rinkeby';\n      case 1:\n        return 'Main';\n      case 42:\n        return 'Kovan';\n      default:\n        return 'Private';\n    }\n  }\n\n  render()  {\n    const { networkId, accounts, balance, isMetaMask } = this.props;\n    return (\n      <div className={styles.web3}>\n        <h3> Your Web3 Info </h3>\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Network:\n          </div>\n          <div className={styles.value}>\n            {networkId} - {this.renderNetworkName(networkId)}\n          </div>\n        </div>\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Your address:\n          </div>\n          <div className={styles.value}>\n            <EthAddress address={accounts[0]}/>\n            <Blockie\n              opts={{seed: accounts[0], size: 15, scale: 3}} />\n          </div>\n        </div>\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Your ETH balance:\n          </div>\n          <div className={styles.value}>\n            {balance}\n          </div>\n        </div>\n        <div className={styles.dataPoint}>\n          <div className={styles.label}>\n            Using Metamask:\n          </div>\n          <div className={styles.value}>\n            {isMetaMask ? 'YES' : 'NO'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import green from '@material-ui/core/colors/green';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      dark: blueGrey[900],\n      light: blueGrey[600],\n      main: blueGrey[800],\n    },\n    secondary: {\n      dark: green[900],\n      light: green[500],\n      main: green[800],\n    },\n  },\n});\n","export const walletAddressList = {\n    \"addressList\": {\n        \"address1\": \"0x718E3ea0B8C2911C5e54Cb4b9B2075fdd87B55a7\",\n        \"address2\": \"0xb4124cEB3451635DAcedd11767f004d8a28c6eE7\",\n        \"address3\": \"0x8Fc9d07b1B9542A71C4ba1702Cd230E160af6EB3\",\n        \"address4\": \"0x0fED8b3f1024f6577E563c29CB8B8829EE2b87ef\"\n    },\n}\n","import React, { Component } from \"react\";\nimport getWeb3, { getGanacheWeb3, Web3 } from \"../../utils/getWeb3\";\n\nimport App from \"../../App.js\";\n\nimport { Typography, Grid, TextField } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { theme } from '../../utils/theme';\nimport { Loader, Button, Card, Input, Heading, Table, Form, Flex, Box, Image, EthAddress } from 'rimble-ui';\nimport { zeppelinSolidityHotLoaderOptions } from '../../../config/webpack';\n\nimport styles from '../../App.module.scss';\n//import './App.css';\n\nimport { walletAddressList } from '../../data/testWalletAddress.js'\nimport { contractAddressList } from '../../data/contractAddress/contractAddress.js'\n\n\nexport default class GasFeePool extends Component {\n    constructor(props) {    \n        super(props);\n\n        this.state = {\n            /////// Default state\n            storageValue: 0,\n            web3: null,\n            accounts: null,\n            route: window.location.pathname.replace(\"/\", \"\"),\n\n            /////// createHat() function \n            createHatRecipientsList: [],\n            createHatProportionsList: [],\n\n            /////// mintWithNewHat() function \n            mintWithNewHatRecipientsList: [],\n            mintWithNewHatProportionsList: []\n        };\n\n        this.getTestData = this.getTestData.bind(this);\n        this.handleInputAddRelayer = this.handleInputAddRelayer.bind(this);\n\n        this.handleInputCreateHatRecipients = this.handleInputCreateHatRecipients.bind(this);\n        this.handleInputCreateHatProportions = this.handleInputCreateHatProportions.bind(this);\n\n        this.handleInputMintWithSelectedHatMintAmount = this.handleInputMintWithSelectedHatMintAmount.bind(this);\n        this.handleInputMintWithSelectedHatHatID = this.handleInputMintWithSelectedHatHatID.bind(this);\n\n        this.handleInputMintWithNewHatMintAmount = this.handleInputMintWithNewHatMintAmount.bind(this);\n        this.handleInputMintWithNewHatRecipients = this.handleInputMintWithNewHatRecipients.bind(this);\n        this.handleInputMintWithNewHatProportions = this.handleInputMintWithNewHatProportions.bind(this);\n\n        this.handleInputRedeemTokens = this.handleInputRedeemTokens.bind(this);        \n        this.handleInputRedeemAndTransferRedeemTo = this.handleInputRedeemAndTransferRedeemTo.bind(this);        \n        this.handleInputRedeemAndTransferRedeemTokens = this.handleInputRedeemAndTransferRedeemTokens.bind(this);        \n        this.handleInputRedeemAndTransferAllRedeemTo = this.handleInputRedeemAndTransferAllRedeemTo.bind(this);\n    }\n\n    handleInputAddRelayer({ target: { value } }) {\n        this.setState({ valueOfAddRelayer: value });\n    }\n\n    handleInputCreateHatRecipients({ target: { value } }) {\n        this.setState({ valueOfCreateHatRecipients: value });\n    }\n\n    handleInputCreateHatProportions({ target: { value } }) {\n        this.setState({ valueOfCreateHatProportions: Number(value) });\n    }\n\n    handleInputMintWithSelectedHatMintAmount({ target: { value } }) {\n        this.setState({ valueOfMintWithSelectedHatMintAmount: value });  //@dev - Already specified \"input type\"=\"number\"\n    }\n\n    handleInputMintWithSelectedHatHatID({ target: { value } }) {\n        this.setState({ valueOfMintWithSelectedHatHatID: Number(value) });\n    }\n\n    handleInputMintWithNewHatMintAmount({ target: { value } }) {\n        this.setState({ valueOfMintWithNewHatMintAmount: value });  //@dev - Already specified \"input type\"=\"number\"\n    }\n\n    handleInputMintWithNewHatRecipients({ target: { value } }) {\n        this.setState({ valueOfMintWithNewHatRecipients: value });\n    }\n\n    handleInputMintWithNewHatProportions({ target: { value } }) {\n        this.setState({ valueOfMintWithNewHatProportions: Number(value) });\n    }\n\n    handleInputRedeemTokens({ target: { value } }) {\n        this.setState({ valueOfRedeemTokens: value });  //@dev - Already specified \"input type\"=\"number\"\n    }\n\n    handleInputRedeemAndTransferRedeemTo({ target: { value } }) {\n        this.setState({ valueOfRedeemAndTransferRedeemTo: value });\n    }\n\n    handleInputRedeemAndTransferRedeemTokens({ target: { value } }) {\n        this.setState({ valueOfRedeemAndTransferRedeemTokens: value });  //@dev - Already specified \"input type\"=\"number\"\n    }\n\n    handleInputRedeemAndTransferAllRedeemTo({ target: { value } }) {\n        this.setState({ valueOfRedeemAndTransferAllRedeemTo: value });\n    }\n\n\n    rTokenInfo = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;\n        let response = await gas_fee_pool.methods.rTokenInfo().call();\n        console.log('=== response of rTokenInfo() function ===', response);\n    }\n\n    createHatAddRecipients = async () => {\n        const { accounts, web3, createHatRecipientsList, valueOfCreateHatRecipients } = this.state;\n\n        //const createHatRecipientsList = [];\n        createHatRecipientsList.push(valueOfCreateHatRecipients);\n        console.log('=== createHatRecipientsList ===', createHatRecipientsList);\n\n        this.setState({ valueOfCreateHatRecipients: '' });\n\n        return createHatRecipientsList;\n    }\n\n    createHatAddProportions = async () => {\n        const { accounts, web3, createHatProportionsList, valueOfCreateHatProportions } = this.state;\n\n        //const createHatProportions = [];\n        createHatProportionsList.push(valueOfCreateHatProportions);\n        console.log('=== createHatProportionsList ===', createHatProportionsList);\n\n        this.setState({ valueOfCreateHatProportions: '' });\n\n        return createHatProportionsList;\n    }\n\n    createHat = async () => {\n        const { accounts, web3, gas_fee_pool, createHatRecipientsList, createHatProportionsList } = this.state;\n\n        const _recipients = createHatRecipientsList; \n        //const _recipients = [recipient1, recipient2];\n        const _proportions = createHatProportionsList;\n        //const _proportions = [70, 30];\n        const _doChangeHat = true;\n        console.log('=== _recipients ===', _recipients);\n        console.log('=== _proportions ===', _proportions);\n\n        let response = await gas_fee_pool.methods._createHat(_recipients, \n                                                                     _proportions, \n                                                                     _doChangeHat).send({ from: accounts[0] })\n        console.log('=== response of _createHat() function ===', response);\n\n        this.setState({ createHatRecipientsList: [], createHatProportionsList: [] });              \n    }\n\n    getHatByID = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;\n\n        const _hatID = 222;\n\n        let response = await gas_fee_pool.methods._getHatByID(_hatID).call();\n        console.log('=== response of _getHatByID() function ===', response);          \n    }\n\n    getHatByAddress = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;\n\n        let response = await gas_fee_pool.methods._getHatByAddress().call();\n        console.log('=== response of _getHatByAddress() function ===', response);\n    }\n\n    approve = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;    \n        //const _spender = \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\"                    // underlying token (DAI)\n        //const _spender = \"0x462303f77a3f17Dbd95eb7bab412FE4937F9B9CB\";                   // rDAI-proxy\n        //const _spender = contractAddressList[\"Kovan\"][\"rtoken-contract\"][\"rDAI-proxy\"];  // rDAI-proxy\n        const _amount = 105;  // Expected transferred value is 1.05 DAI（= 1050000000000000000 Wei）\n\n        let response = await gas_fee_pool.methods._approve(_amount).send({ from: accounts[0] });\n        console.log('=== response of _approve() function ===', response);     \n    }\n\n    allowance = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;\n\n        let response = await gas_fee_pool.methods._allowance().call();\n        console.log('=== response of _allowance() function ===', response);\n    }\n\n    mintWithSelectedHat = async () => {\n        const { accounts, web3, gas_fee_pool, dai, rDAI, gas_fee_pool_address, rDAI_address,  valueOfMintWithSelectedHatMintAmount, valueOfMintWithSelectedHatHatID } = this.state;\n\n        const _mintAmount = valueOfMintWithSelectedHatMintAmount;\n        //const _mintAmount = 1.05;   // Expected transferred value is 1.05 DAI（= 1050000000000000000 Wei）\n        const _hatID = valueOfMintWithSelectedHatHatID;\n        //const _hatID = 222;\n\n        //@dev - Transfer DAI from UserWallet to DAI-contract\n        let decimals = 18;\n        let mintAmount = web3.utils.toWei(_mintAmount.toString(), 'ether');\n        //let mintAmount = web3.utils.toWei((_mintAmount / ((10)**2)).toString(), 'ether');\n        console.log('=== mintAmount ===', mintAmount);\n        const _spender = rDAI_address;\n\n        let approved = await dai.methods.approve(_spender, mintAmount).send({ from: accounts[0] });\n        console.log('=== dai.sol of approve() function ===', approved);\n\n        let allowance = await dai.methods.allowance(accounts[0], _spender).call();\n        console.log('=== dai.sol of allowance() function ===', allowance);\n\n        let response = await rDAI.methods.mintWithSelectedHat(mintAmount, _hatID).send({ from: accounts[0] });\n        console.log('=== rDAI.sol of mintWithSelectedHat() function ===', response);     \n\n        this.setState({ valueOfMintWithSelectedHatMintAmount: '', valueOfMintWithSelectedHatHatID: '' });\n    }\n  \n    mintWithNewHatAddRecipients = async () => {\n        const { accounts, web3, mintWithNewHatRecipientsList, valueOfMintWithNewHatRecipients } = this.state;\n\n        mintWithNewHatRecipientsList.push(valueOfMintWithNewHatRecipients);\n        console.log('=== mintWithNewHatRecipientsList ===', mintWithNewHatRecipientsList);\n\n        this.setState({ valueOfMintWithNewHatRecipients: '' });\n\n        return mintWithNewHatRecipientsList;\n    }\n\n    mintWithNewHatAddProportions = async () => {\n        const { accounts, web3, mintWithNewHatProportionsList, valueOfMintWithNewHatProportions } = this.state;\n\n        mintWithNewHatProportionsList.push(valueOfMintWithNewHatProportions);\n        console.log('=== mintWithNewHatProportionsList ===', mintWithNewHatProportionsList);\n\n        this.setState({ valueOfMintWithNewHatProportions: '' });\n\n        return mintWithNewHatProportionsList;\n    }\n\n    mintWithNewHat = async () => {\n        const { accounts, web3, gas_fee_pool, dai, rDAI, gas_fee_pool_address, rDAI_address, valueOfMintWithNewHatMintAmount, mintWithNewHatRecipientsList, mintWithNewHatProportionsList } = this.state;\n\n        const _mintAmount = valueOfMintWithNewHatMintAmount;\n        //const _mintAmount = 105;  // Expected transferred value is 1.05 DAI（= 1050000000000000000 Wei）\n        const _recipients = mintWithNewHatRecipientsList;\n        //const _recipients = [recipient1, recipient2];\n        const _proportions = mintWithNewHatProportionsList;\n        //const _proportions = [214748364, 4080218930];\n\n        //@dev - Convert _mintAmount to transferred amount unit\n        let decimals = 18;\n        let mintAmount = web3.utils.toWei(_mintAmount.toString(), 'ether');\n\n        console.log('=== _recipients ===', _recipients);\n        console.log('=== _proportions ===', _proportions);\n        console.log('=== mintAmount ===', mintAmount);\n\n        //@dev - Approve and Allowance\n        const _spender = rDAI_address;\n        let approved = await dai.methods.approve(_spender, mintAmount).send({ from: accounts[0] });\n        let allowance = await dai.methods.allowance(accounts[0], _spender).call();\n        console.log('=== dai.sol of allowance() function ===', allowance);\n\n        //@dev - Execute mintWithNewHat() function via rDAI.sol\n        let response = await rDAI.methods.mintWithNewHat(mintAmount, _recipients, _proportions).send({ from: accounts[0] });\n        console.log('=== rDAI.sol of of mintWithNewHat() function ===', response);\n\n        this.setState({ valueOfMintWithNewHatMintAmount: '', \n                        mintWithNewHatRecipientsList: [], \n                        mintWithNewHatProportionsList: [] });     \n    }\n\n    interestPayableOf = async () => {\n        const { accounts, gas_fee_pool, dai, rDAI, gas_fee_pool_address, rDAI_address, web3 } = this.state;\n\n        const _owner = walletAddressList[\"addressList\"][\"address1\"];\n\n        let interestPayableOfAmount = await rDAI.methods.interestPayableOf(_owner).call();\n        console.log('=== rDAI.sol of interestPayableOf() function ===', interestPayableOfAmount); \n    }\n\n    redeem = async () => {\n        const { accounts, web3, gas_fee_pool, dai, rDAI, gas_fee_pool_address, rDAI_address, valueOfRedeemTokens } = this.state;\n\n        const _redeemTokens = valueOfRedeemTokens;\n        //const _redeemTokens = 1.05;  // Expected transferred value is 1.05 DAI（= 1050000000000000000 Wei）\n\n        //@dev - Transfer DAI from UserWallet to DAI-contract\n        let decimals = 18;\n        let redeemTokens = web3.utils.toWei(_redeemTokens.toString(), 'ether');\n        console.log('=== redeemTokens ===', redeemTokens);\n        const _spender = rDAI_address;\n\n        let response = await rDAI.methods.redeem(redeemTokens).send({ from: accounts[0] });\n        console.log('=== rDAI.sol of redeem() function ===', response);\n\n        this.setState({ valueOfRedeemTokens: '' });\n    }\n\n    redeemAll = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;\n\n        let response = await gas_fee_pool.methods._redeemAll().send({ from: accounts[0] });\n        console.log('=== response of _redeemAll() function ===', response);           \n    }\n\n    redeemAndTransfer = async () => {\n        const { accounts, web3, gas_fee_pool, valueOfRedeemAndTransferRedeemTo, valueOfRedeemAndTransferRedeemTokens } = this.state;\n\n        const _redeemTo = valueOfRedeemAndTransferRedeemTo;\n        const _redeemTokens = valueOfRedeemAndTransferRedeemTokens;\n\n        let response = await gas_fee_pool.methods._redeemAndTransfer(_redeemTo, _redeemTokens).send({ from: accounts[0] });\n        console.log('=== response of _redeemAndTransfer() function ===', response);           \n\n        this.setState({ valueOfRedeemAndTransferRedeemTo: '', valueOfRedeemAndTransferRedeemTokens: '' });\n    }\n\n    redeemAndTransferAll = async () => {\n        const { accounts, web3, gas_fee_pool, valueOfRedeemAndTransferAllRedeemTo } = this.state;\n\n        const _redeemTo = valueOfRedeemAndTransferAllRedeemTo;\n\n        let response = await gas_fee_pool.methods._redeemAndTransferAll(_redeemTo).send({ from: accounts[0] });\n        console.log('=== response of _redeemAndTransferAll() function ===', response);           \n\n        this.setState({ valueOfRedeemAndTransferAllRedeemTo: '' });\n    }\n\n\n    /***\n     * @dev - Hat Status\n     **/\n    getHatStats = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;\n        const _hatID = 222;\n        let response = await gas_fee_pool.methods._getHatStats(_hatID).call();\n        console.log('=== response of _getHatStats() function ===', response);           \n    }\n\n    balanceOf = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;\n\n        let response = await gas_fee_pool.methods._balanceOf().call();\n        console.log('=== response of _balanceOf() function ===', response);               \n    }\n\n    underlying = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;\n        let response = await gas_fee_pool.methods._underlying().call();\n        console.log('=== response of _underlying() function ===', response);\n    }\n\n    /***\n     * @dev - Meta-Tx by using Biconomy\n     **/\n    addRelayer = async () => {\n        const { accounts, relay_hub, relayer_manager, gas_fee_pool, web3, valueOfAddRelayer } = this.state;\n\n        const _relayerAddress = valueOfAddRelayer;\n        let relayer = await relayer_manager.methods.addRelayer(_relayerAddress).send({ from: accounts[0] });\n        console.log('=== RelayerManager.sol of addRelayer() function ===', relayer);\n\n        this.setState({ valueOfAddRelayer: '' });\n    }\n\n    getAllRelayers = async () => {\n        const { accounts, relay_hub, relayer_manager, gas_fee_pool, web3 } = this.state;\n\n        let relayers = await relayer_manager.methods.getAllRelayers().call();\n        console.log('=== RelayerManager.sol of getAllRelayers() function ===', relayers);\n    }\n\n    getRelayerStatus = async () => {\n        const { accounts, relay_hub, relayer_manager, gas_fee_pool, web3 } = this.state;\n\n        let relayers = await relayer_manager.methods.getAllRelayers().call();\n\n        let relayerStatus = await relayer_manager.methods.getRelayerStatus(relayers[0]).call();\n        console.log('=== RelayerManager.sol of getRelayerStatus() function ===', relayerStatus);\n    }    \n\n\n    /***\n     * @dev - Test Functions\n     **/\n    getTestData = async () => {\n        const { accounts, gas_fee_pool, web3 } = this.state;\n\n        const _currentAccount = accounts[0];\n        let balanceOf1 = await gas_fee_pool.methods.balanceOfCurrentAccount(_currentAccount).call();\n        console.log('=== response of balanceOfCurrentAccount() / 1 ===', balanceOf1);\n \n        const _mintAmount = 105;  // Expected transferred value is 1.05 DAI（= 1050000000000000000 Wei）s\n        let response = await gas_fee_pool.methods.testFunc(_mintAmount).send({ from: accounts[0] })\n        console.log('=== response of testFunc() function ===', response);\n\n        let balanceOf2 = await gas_fee_pool.methods.balanceOfCurrentAccount(_currentAccount).call();\n        console.log('=== response of balanceOfCurrentAccount() / 2 ===', balanceOf2);\n    }\n\n    transferDAIFromUserToContract = async () => {\n        const { accounts, gas_fee_pool, dai, gasFeePoolAddress, web3 } = this.state;\n\n        const _mintAmount = 105;  // Expected transferred value is 1.05 DAI（= 1050000000000000000 Wei）s\n\n        //@dev - Transfer DAI from UserWallet to DAI-contract\n        let decimals = 18;\n        let _amount = web3.utils.toWei((_mintAmount / ((10)**2)).toString(), 'ether');\n        console.log('=== _amount ===', _amount);\n        const _to = gasFeePoolAddress;\n        let response1 = await dai.methods.transfer(_to, _amount).send({ from: accounts[0] });\n\n        //@dev - Transfer DAI from DAI-contract to Logic-contract\n        let response2 = await gas_fee_pool.methods.transferDAIFromUserToContract(_mintAmount).send({ from: accounts[0] });  // wei\n        console.log('=== response of transferDAIFromUserToContract() function ===', response2);\n    }\n\n\n    //////////////////////////////////// \n    ///// Refresh Values\n    ////////////////////////////////////\n    refreshValues = (instanceGasFeePool) => {\n        if (instanceGasFeePool) {\n          //console.log('refreshValues of instanceGasFeePool');\n        }\n    }\n\n\n    //////////////////////////////////// \n    ///// Ganache\n    ////////////////////////////////////\n    getGanacheAddresses = async () => {\n        if (!this.ganacheProvider) {\n            this.ganacheProvider = getGanacheWeb3();\n        }\n        if (this.ganacheProvider) {\n            return await this.ganacheProvider.eth.getAccounts();\n        }\n        return [];\n    }\n\n    componentDidMount = async () => {\n        const hotLoaderDisabled = zeppelinSolidityHotLoaderOptions.disabled;\n     \n        let GasFeePool = {};\n        let Dai = {};\n        let rDAI = {};\n        let RelayHub = {};\n        let RelayerManager = {};\n        let MetaTransactionTest = {};\n        try {\n          GasFeePool = require(\"../../../../build/contracts/GasFeePool.json\");  // Load artifact-file of GasFeePool\n          Dai = require(\"../../../../build/contracts/Dai.json\");    //@dev - DAI（Underlying asset）\n          rDAI = require(\"../../../../build/contracts/rDAI.json\");  //@dev - rDAI（rDAI proxy contract）\n          RelayHub = require(\"../../../../build/contracts/RelayHub.json\");  //@dev - Artifact of RelayHub contract\n          RelayerManager = require(\"../../../../build/contracts/RelayerManager.json\");  //@dev - Artifact of RelayerManager contract\n          MetaTransactionTest = require(\"../../../../build/contracts/MetaTransactionTest.json\");  \n        } catch (e) {\n          console.log(e);\n        }\n\n        try {\n          const isProd = process.env.NODE_ENV === 'production';\n          if (!isProd) {\n            // Get network provider and web3 instance.\n            const web3 = await getWeb3();\n            let ganacheAccounts = [];\n\n            try {\n              ganacheAccounts = await this.getGanacheAddresses();\n            } catch (e) {\n              console.log('Ganache is not running');\n            }\n\n            // Use web3 to get the user's accounts.\n            const accounts = await web3.eth.getAccounts();\n            // Get the contract instance.\n            const networkId = await web3.eth.net.getId();\n            const networkType = await web3.eth.net.getNetworkType();\n            const isMetaMask = web3.currentProvider.isMetaMask;\n            let balance = accounts.length > 0 ? await web3.eth.getBalance(accounts[0]): web3.utils.toWei('0');\n            balance = web3.utils.fromWei(balance, 'ether');\n\n            let instanceGasFeePool = null;\n            let deployedNetwork = null;\n\n            // Create instance of contracts\n            if (GasFeePool.networks) {\n              deployedNetwork = GasFeePool.networks[networkId.toString()];\n              if (deployedNetwork) {\n                instanceGasFeePool = new web3.eth.Contract(\n                  GasFeePool.abi,\n                  deployedNetwork && deployedNetwork.address,\n                );\n                console.log('=== instanceGasFeePool ===', instanceGasFeePool);\n              }\n            }\n\n            //@dev - Create instance of DAI-contract\n            let instanceDai = null;\n            let GasFeePoolAddress = GasFeePool.networks[networkId.toString()].address;\n            let DaiAddress = \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\"; //@dev - DAI（Underlying asset）\n            instanceDai = new web3.eth.Contract(\n              Dai.abi,\n              DaiAddress,\n            );\n            console.log('=== instanceDai ===', instanceDai);\n\n            //@dev - Create instance of rDAI-contract\n            let instanceRDai = null;\n            let rDaiAddress = \"0x462303f77a3f17Dbd95eb7bab412FE4937F9B9CB\"; //@dev - rDAI（rDAI proxy contract）\n            instanceRDai = new web3.eth.Contract(\n              rDAI.abi,\n              rDaiAddress,\n            );\n            console.log('=== instanceRDai ===', instanceRDai); \n\n            //@dev - Create instance of RelayHub\n            let instanceRelayHub = null;\n            if (RelayHub.networks) {\n              deployedNetwork = RelayHub.networks[networkId.toString()];\n              if (deployedNetwork) {\n                instanceRelayHub = new web3.eth.Contract(\n                  RelayHub.abi,\n                  deployedNetwork && deployedNetwork.address,\n                );\n                console.log('=== instanceRelayHub ===', instanceRelayHub);\n              }\n            }\n            \n            //@dev - Create instance of RelayerManager\n            let instanceRelayerManager = null;\n            if (RelayerManager.networks) {\n              deployedNetwork = RelayerManager.networks[networkId.toString()];\n              if (deployedNetwork) {\n                instanceRelayerManager = new web3.eth.Contract(\n                   RelayerManager.abi,\n                   deployedNetwork && deployedNetwork.address,\n                );\n                console.log('=== instanceRelayerManager ===', instanceRelayerManager);\n              }\n            }\n\n            //@dev - Create instance of MetaTransactionTest.sol\n            let instanceMetaTransactionTest = null;\n            if (MetaTransactionTest.networks) {\n              deployedNetwork = MetaTransactionTest.networks[networkId.toString()];\n              if (deployedNetwork) {\n                instanceMetaTransactionTest = new web3.eth.Contract(\n                   MetaTransactionTest.abi,\n                   deployedNetwork && deployedNetwork.address,\n                );\n                console.log('=== instanceMetaTransactionTest ===', instanceMetaTransactionTest);\n              }\n            }\n\n\n            if (GasFeePool) {\n              // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n              this.setState({ \n                web3, \n                ganacheAccounts, \n                accounts, \n                balance, \n                networkId, \n                networkType, \n                hotLoaderDisabled,\n                isMetaMask, \n                gas_fee_pool: instanceGasFeePool,\n                dai: instanceDai,\n                rDAI: instanceRDai,\n                gas_fee_pool_address: GasFeePoolAddress,\n                rDAI_address: rDaiAddress,\n                relay_hub: instanceRelayHub,\n                relayer_manager: instanceRelayerManager,\n                gas_fee_pool: instanceGasFeePool\n              }, () => {\n                this.refreshValues(\n                  instanceGasFeePool\n                );\n                setInterval(() => {\n                  this.refreshValues(instanceGasFeePool);\n                }, 5000);\n              });\n            }\n            else {\n              this.setState({ web3, ganacheAccounts, accounts, balance, networkId, networkType, hotLoaderDisabled, isMetaMask });\n            }\n          }\n        } catch (error) {\n          // Catch any errors for any of the above operations.\n          alert(\n            `Failed to load web3, accounts, or contract. Check console for details.`,\n          );\n          console.error(error);\n        }\n    }\n\n\n    render() {\n        const { accounts, gas_fee_pool } = this.state;\n\n        return (\n            <div className={styles.widgets}>\n                <Grid container style={{ marginTop: 32 }}>\n                    <Grid item xs={12}>\n                        <h4>Gas Fee Pool</h4> <br />\n\n                        <Card width={\"auto\"} \n                              maxWidth={\"1280px\"} \n                              mx={\"auto\"} \n                              my={5} \n                              p={20} \n                              borderColor={\"#E8E8E8\"}\n                        >\n                            <h4>Register RelayerAddress</h4>\n                            <Table>\n                                <tr>\n                                    <td><Input type=\"text\" placeholder=\"Please input relayer address\" value={this.state.valueOfAddRelayer} onChange={this.handleInputAddRelayer} /></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.addRelayer}> Add Relayer </Button></td>\n                                </tr>\n                            </Table>\n\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.getAllRelayers}> Get All Relayers </Button> <br />\n\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.getRelayerStatus}> Get Relayer Status </Button> <br />\n                        </Card>\n\n                        <Card width={\"auto\"} \n                              maxWidth={\"1280px\"} \n                              mx={\"auto\"} \n                              my={5} \n                              p={20} \n                              borderColor={\"#E8E8E8\"}\n                        >\n                            <h4>Gas Fee Pool Hat<br />（by using rDAI）</h4> <br />\n                            <h4>↓</h4> <br />\n                            <h4>Proportions example<br />10%: GasFeePool (To RelayerAddress)<br />90%: Owner</h4> <br />\n\n                            <hr /> <br />\n                            <h4>Write Functions</h4>\n\n                            <Table>\n                                <tr>\n                                    <td><p>Recipients</p></td>\n                                    <td><Input type=\"text\" placeholder=\"Please input recipients address\" value={this.state.valueOfCreateHatRecipients} onChange={this.handleInputCreateHatRecipients} /></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.createHatAddRecipients}> Add Recipients </Button></td>\n                                </tr>\n                                <tr>\n                                    <td><p>Proportions</p></td>\n                                    <td><Input type=\"text\" placeholder=\"Please input proportions\" value={this.state.valueOfCreateHatProportions} onChange={this.handleInputCreateHatProportions} /></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.createHatAddProportions}> Add Proportions </Button></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.createHat}> Create Hat </Button></td>\n                                    <td></td>\n                                </tr>\n                            </Table>\n\n                            <br />\n\n                            <Table>\n                                <tr>\n                                    <td><p>Mint Amount</p></td>\n                                    <td><Input type=\"number\" step=\"0.01\" placeholder=\"Please input Mint Amount\" value={this.state.valueOfMintWithNewHatMintAmount} onChange={this.handleInputMintWithNewHatMintAmount} /></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td><p>Recipients</p></td>\n                                    <td><Input type=\"text\" placeholder=\"Please input recipients address\" value={this.state.valueOfMintWithNewHatRecipients} onChange={this.handleInputMintWithNewHatRecipients} /></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.mintWithNewHatAddRecipients}> Add Recipients </Button></td>\n                                </tr>\n                                <tr>\n                                    <td><p>Proportions</p></td>\n                                    <td><Input type=\"text\" placeholder=\"Please input proportions\" value={this.state.valueOfMintWithNewHatProportions} onChange={this.handleInputMintWithNewHatProportions} /></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.mintWithNewHatAddProportions}> Add Proportions </Button></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.mintWithNewHat}> Mint With New Hat </Button></td>\n                                    <td></td>\n                                </tr>\n                            </Table>\n\n                            <br />\n\n                            <h4>↓</h4> \n\n                            <br />\n\n                            <Table>\n                                <tr>\n                                    <td><p>Mint Amount</p></td>\n                                    <td><Input type=\"number\" step=\"0.01\" placeholder=\"Please input Mint Amount\" value={this.state.valueOfMintWithSelectedHatMintAmount} onChange={this.handleInputMintWithSelectedHatMintAmount} /></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td><p>Hat ID</p></td>\n                                    <td><Input type=\"text\" placeholder=\"Please input Hat ID\" value={this.state.valueOfMintWithSelectedHatHatID} onChange={this.handleInputMintWithSelectedHatHatID} /></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.mintWithSelectedHat}> Mint With Selected Hat </Button></td>\n                                    <td></td>\n                                </tr>\n                            </Table>\n\n                            <br />\n\n                            <h4>↓</h4> \n\n                            <br />\n\n                            <Table>\n                                <tr>\n                                    <td><p>Redeem Tokens（Amount）</p></td>\n                                    <td><Input type=\"number\" step=\"0.01\" placeholder=\"Please input Redeem Tokens（Amount）\" value={this.state.valueOfRedeemTokens} onChange={this.handleInputRedeemTokens} /></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.redeem}> Redeem </Button></td>\n                                    <td></td>\n                                </tr>\n                            </Table>\n\n                            <br />\n\n                            <Table>\n                                <tr>\n                                    <td></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.redeemAll}> Redeem All </Button></td>\n                                    <td></td>\n                                </tr>\n                            </Table>\n\n                            <br />\n\n                            <Table>\n                                <tr>\n                                    <td><p>Redeem To</p></td>\n                                    <td><Input type=\"number\" step=\"0.01\" placeholder=\"Please input Redeem To\" value={this.state.valueOfRedeemAndTransferRedeemTo} onChange={this.handleInputRedeemAndTransferRedeemTo} /></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td><p>Redeem Tokens（Amount）</p></td>\n                                    <td><Input type=\"number\" step=\"0.01\" placeholder=\"Please input Redeem Tokens（Amount）\" value={this.state.valueOfRedeemAndTransferRedeemTokens} onChange={this.handleInputRedeemAndTransferRedeemTokens} /></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.redeemAndTransfer}> Redeem And Transfer </Button></td>\n                                    <td></td>\n                                </tr>\n                            </Table>\n\n                            <br />\n\n                            <Table>\n                                <tr>\n                                    <td><p>Redeem To</p></td>\n                                    <td><Input type=\"number\" step=\"0.01\" placeholder=\"Please input Redeem To\" value={this.state.valueOfRedeemAndTransferAllRedeemTo} onChange={this.handleInputRedeemAndTransferAllRedeemTo} /></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.redeemAndTransferAll}> Redeem And Transfer All </Button></td>\n                                    <td></td>\n                                </tr>\n                            </Table>\n\n                            <br />\n                            <br />\n\n                            <hr /> \n\n                            <br /> \n\n                            <h4>Read Functions</h4>\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.rTokenInfo}> rToken Info </Button> <br />\n\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.getHatByID}> Get Hat By ID </Button> <br />\n\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.getHatByAddress}> Get Hat By Address </Button> <br />\n\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.getHatStats}> Get Hat Stats </Button> <br />\n\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.allowance}> Allowance rDAI Proxy Contract </Button> <br />\n\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.interestPayableOf}> Interest Payable Of </Button> <br />\n\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.balanceOf}> Balance Of </Button> <br />\n\n                            <Button mainColor=\"DarkCyan\" size={'small'} mt={3} mb={2} onClick={this.underlying}> Underlying Asset Address </Button> <br />\n                        </Card>\n\n                        <Card width={\"auto\"} \n                              maxWidth={\"1280px\"} \n                              mx={\"auto\"} \n                              my={5} \n                              p={20} \n                              borderColor={\"#E8E8E8\"}\n                        >\n                            <h4>Testing Function</h4>\n\n                            <Button size={'small'} mt={3} mb={2} onClick={this.getTestData}> Get Test Data </Button> <br />\n\n                            <Button size={'small'} mt={3} mb={2} onClick={this.transferDAIFromUserToContract}> Transfer DAI From User To Contract </Button> <br />\n\n                            <Button size={'small'} mt={3} mb={2} onClick={this.approve}> Approve rDAI Proxy Contract </Button> <br />\n                        </Card>\n\n                    </Grid>\n\n                    <Grid item xs={4}>\n                    </Grid>\n\n                    <Grid item xs={4}>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n","import React, { Component } from \"react\";\nimport getWeb3, { getGanacheWeb3, Web3 } from \"../../utils/getWeb3\";\n\nimport App from \"../../App.js\";\n\nimport { Typography, Grid, TextField } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { theme } from '../../utils/theme';\nimport { Loader, Button, Card, Input, Heading, Table, Form, Flex, Box, Image, EthAddress } from 'rimble-ui';\nimport { zeppelinSolidityHotLoaderOptions } from '../../../config/webpack';\n\nimport styles from '../../App.module.scss';\n//import './App.css';\n\nimport { walletAddressList } from '../../data/testWalletAddress.js'\nimport { contractAddressList } from '../../data/contractAddress/contractAddress.js'\n\nimport {\n    NotificationContainer,\n    NotificationManager\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\n\nlet sigUtil = require(\"eth-sig-util\");\nrequire('dotenv').config();\nconst INFURA_API_KEY = process.env.INFURA_API_KEY;\n\n\n/***\n * @dev - Method\n **/\nexport default class MetaTransactionTest extends Component {\n    constructor(props) {    \n        super(props);\n\n        this.state = {\n            /////// Default state\n            storageValue: 0,\n            web3: null,\n            accounts: null,\n            route: window.location.pathname.replace(\"/\", \"\")\n        };\n\n        this.handleInputExecuteMetaTransactionTestNewText = this.handleInputExecuteMetaTransactionTestNewText.bind(this);\n        this.handleInputSetTextNewText = this.handleInputSetTextNewText.bind(this);\n\n        this.executeMetaTransactionTest = this.executeMetaTransactionTest.bind(this);\n        this.setText = this.setText.bind(this);\n    }\n\n    handleInputExecuteMetaTransactionTestNewText({ target: { value } }) {\n        this.setState({ valueOfExecuteMetaTransactionTestNewText: value });\n    }\n\n    handleInputSetTextNewText({ target: { value } }) {\n        this.setState({ valueOfSetTextNewText: value });\n    }\n\n    executeMetaTransactionTest = async () => {\n        const { accounts, web3, meta_transaction_test, domainType, metaTransactionType, domainData, valueOfExecuteMetaTransactionTestNewText } = this.state;\n\n        //@dev - Execute function\n        const _newText = valueOfExecuteMetaTransactionTestNewText;\n        let response = await meta_transaction_test.methods.executeMetaTransactionTest(_newText).send({ from: accounts[0] });\n        console.log('=== response of executeMetaTransactionTest() ===', response);\n\n        this.setState({ valueOfExecuteMetaTransactionTestNewText: '' });\n    }\n\n    setText = async () => {\n        const { accounts, web3, meta_transaction_test, domainType, metaTransactionType, domainData, valueOfSetTextNewText } = this.state;\n\n        /***\n         * @dev - Global Variable\n         **/\n        const text = \"This is a default text\";\n        const setText = \"This is a default text\";\n        const owner = \"Default Owner Address\";\n        const setOwner = \"Default Owner Address\";\n        const newText = \"Test New Text\";\n        const setNewText = valueOfSetTextNewText;\n        const selectedAddress = accounts[0];\n        //const selectedAddress = \"\";\n        const setSelectedAddress = accounts[0];\n        ///const setSelectedAddress = \"\";\n        const metaTxEnabled = true;\n        const setMetaTxEnabled = true;\n\n        if (newText != \"\" && meta_transaction_test) {\n          if (metaTxEnabled) {\n\n            console.log(\"=== Sending meta transaction ===\");\n            let userAddress = selectedAddress;\n            let nonce = await meta_transaction_test.methods.getNonce(userAddress).call();\n            let functionSignature = meta_transaction_test.methods.setText(newText).encodeABI();\n            let message = {};\n            message.nonce = parseInt(nonce);\n            message.from = userAddress;\n            message.functionSignature = functionSignature;\n            console.log(\"=== functionSignature ===\", functionSignature);\n\n            const dataToSign = JSON.stringify({\n              types: {\n                EIP712Domain: domainType,\n                MetaTransaction: metaTransactionType\n              },\n              domain: domainData,\n              primaryType: \"MetaTransaction\",\n              message: message\n            });\n            console.log(\"=== domainData ===\", domainData);\n            console.log(\"=== web3.currentProvider ===\", web3.currentProvider);\n            web3.currentProvider.send(\n              {\n                jsonrpc: \"2.0\",\n                id: 999999999999,\n                method: \"eth_signTypedData_v4\",\n                params: [userAddress, dataToSign]\n              },\n              function(error, response) {\n                console.info(`=== User signature is ${response.result} ===`);\n                if (error || (response && response.error)) {\n                  console.log(\"=== Could not get user signature ===\");\n                  console.log(\"=== error ===\", error);\n                  //this.showErrorMessage(\"Could not get user signature\");\n                } else if (response && response.result) {\n                  let { r, s, v } = this.getSignatureParameters(response.result);\n                  console.log(userAddress);\n                  console.log(JSON.stringify(message));\n                  console.log(message);\n                  console.log(this.getSignatureParameters(response.result));\n\n                  const recovered = sigUtil.recoverTypedSignature_v4({\n                    data: JSON.parse(dataToSign),\n                    sig: response.result\n                  });\n                  console.log(`Recovered ${recovered}`);\n                  this.sendTransaction(userAddress, functionSignature, r, s, v);\n                }\n              }\n            );\n          } else {\n            console.log(\"=== Sending normal transaction ===\");\n            meta_transaction_test.methods\n              .setText(newText)\n              .send({ from: selectedAddress })\n              .on(\"transactionHash\", function(hash) {\n                  console.log(`=== Transaction sent to blockchain with hash ${hash} ===`);\n                  //showInfoMessage(`Transaction sent to blockchain with hash ${hash}`);\n              })\n              .once(\"confirmation\", function(confirmationNumber, receipt) {\n                  console.log(\"=== Transaction confirmed ===\");\n                  //showSuccessMessage(\"Transaction confirmed\");\n                  this.getTextFromNetwork();\n              });\n          }\n        } else {\n            console.log(\"=== Please enter the text ===\");\n            //showErrorMessage(\"Please enter the quote\");\n        }\n\n        this.setState({ valueOfSetTextNewText: '' });\n    }\n\n\n    ////////////////////////////////////\n    ///// Internal function \n    ////////////////////////////////////\n    getSignatureParameters = signature => {\n        const { accounts, meta_transaction_test, web3 } = this.state;\n\n        if (!web3.utils.isHexStrict(signature)) {\n          throw new Error(\n            'Given value \"'.concat(signature, '\" is not a valid hex string.')\n          );\n        }\n        var r = signature.slice(0, 66);\n        var s = \"0x\".concat(signature.slice(66, 130));\n        var v = \"0x\".concat(signature.slice(130, 132));\n        v = web3.utils.hexToNumber(v);\n        if (![27, 28].includes(v)) v += 27;\n        return {\n          r: r,\n          s: s,\n          v: v\n        };\n    };\n\n    getTextFromNetwork = () => {\n        const { accounts, meta_transaction_test, web3 } = this.state;\n\n        if (web3 && meta_transaction_test) {\n          meta_transaction_test.methods\n            .getText()\n            .call()\n            .then(function(result) {\n              console.log(\"=== result ===\", result);\n              if (\n                result &&\n                result.currentText != undefined &&\n                result.currentOwner != undefined\n              ) {\n                if (result.currentText == \"\") {\n                  console.log(\"=== No texts set on blockchain yet ===\");\n                  //this.showErrorMessage(\"No texts set on blockchain yet\");\n                } else {\n                  meta_transaction_test.methods.setText(result.currentText);\n                  meta_transaction_test.methods.setOwner(result.currentOwner);\n                }\n              } else {\n                this.showErrorMessage(\"Not able to get text information from Network\");\n              }\n            });\n        }\n    };\n\n    showErrorMessage = (message) => {\n        NotificationManager.error(message, \"Error\", 5000);\n    };\n\n    showSuccessMessage = async (message) => {\n        await NotificationManager.success(message, \"Message\", 3000);\n    };\n\n    showInfoMessage = message => {\n        NotificationManager.info(message, \"Info\", 3000);\n    };\n\n    sendTransaction = async (userAddress, functionData, r, s, v) => {\n        const { accounts, meta_transaction_test, web3 } = this.state;\n\n        if (web3 && meta_transaction_test) {\n          try {\n            let gasLimit = await meta_transaction_test.methods\n              .executeMetaTransaction(userAddress, functionData, r, s, v)\n              .estimateGas({ from: userAddress });\n            let gasPrice = await web3.eth.getGasPrice();\n            console.log(gasLimit);\n            console.log(gasPrice);\n            let tx = meta_transaction_test.methods\n              .executeMetaTransaction(userAddress, functionData, r, s, v)\n              .send({\n                from: userAddress,\n                gasPrice: web3.utils.toHex(gasPrice),\n                gasLimit: web3.utils.toHex(gasLimit)\n              });\n\n            tx.on(\"transactionHash\", function(hash) {\n              console.log(`Transaction hash is ${hash}`);\n              this.showInfoMessage(`Transaction sent by relayer with hash ${hash}`);\n            }).once(\"confirmation\", function(confirmationNumber, receipt) {\n              console.log(receipt);\n              this.showSuccessMessage(\"Transaction confirmed on chain\");\n              this.getTextFromNetwork();\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n    };\n\n\n\n\n    //////////////////////////////////// \n    ///// Refresh Values\n    ////////////////////////////////////\n    refreshValues = (instanceGasFeePool) => {\n        if (instanceGasFeePool) {\n          console.log('refreshValues of instanceGasFeePool');\n        }\n    }\n\n\n    //////////////////////////////////// \n    ///// Ganache\n    ////////////////////////////////////\n    getGanacheAddresses = async () => {\n        if (!this.ganacheProvider) {\n            this.ganacheProvider = getGanacheWeb3();\n        }\n        if (this.ganacheProvider) {\n            return await this.ganacheProvider.eth.getAccounts();\n        }\n        return [];\n    }\n\n    componentDidMount = async () => {\n        /***\n         * @dev - General Definition\n         **/\n        const hotLoaderDisabled = zeppelinSolidityHotLoaderOptions.disabled;\n     \n        let GasFeePool = {};\n        let Dai = {};\n        let rDAI = {};\n        let RelayHub = {};\n        let RelayerManager = {};\n        let MetaTransactionTest = {};\n        try {\n          GasFeePool = require(\"../../../../build/contracts/GasFeePool.json\");  // Load artifact-file of GasFeePool\n          Dai = require(\"../../../../build/contracts/Dai.json\");    //@dev - DAI（Underlying asset）\n          rDAI = require(\"../../../../build/contracts/rDAI.json\");  //@dev - rDAI（rDAI proxy contract）\n          RelayHub = require(\"../../../../build/contracts/RelayHub.json\");  //@dev - Artifact of RelayHub contract\n          RelayerManager = require(\"../../../../build/contracts/RelayerManager.json\");  //@dev - Artifact of RelayerManager contract\n          MetaTransactionTest = require(\"../../../../build/contracts/MetaTransactionTest.json\");  \n        } catch (e) {\n          console.log(e);\n        }\n\n        try {\n          const isProd = process.env.NODE_ENV === 'production';\n          if (!isProd) {\n            // Get network provider and web3 instance.\n            const web3 = await getWeb3();\n            let ganacheAccounts = [];\n\n            try {\n              ganacheAccounts = await this.getGanacheAddresses();\n            } catch (e) {\n              console.log('Ganache is not running');\n            }\n\n            // Use web3 to get the user's accounts.\n            const accounts = await web3.eth.getAccounts();\n            // Get the contract instance.\n            const networkId = await web3.eth.net.getId();\n            const networkType = await web3.eth.net.getNetworkType();\n            const isMetaMask = web3.currentProvider.isMetaMask;\n            let balance = accounts.length > 0 ? await web3.eth.getBalance(accounts[0]): web3.utils.toWei('0');\n            balance = web3.utils.fromWei(balance, 'ether');\n\n            let instanceGasFeePool = null;\n            let deployedNetwork = null;\n\n            // Create instance of contracts\n            if (GasFeePool.networks) {\n              deployedNetwork = GasFeePool.networks[networkId.toString()];\n              if (deployedNetwork) {\n                instanceGasFeePool = new web3.eth.Contract(\n                  GasFeePool.abi,\n                  deployedNetwork && deployedNetwork.address,\n                );\n                console.log('=== instanceGasFeePool ===', instanceGasFeePool);\n              }\n            }\n\n            //@dev - Create instance of DAI-contract\n            let instanceDai = null;\n            let GasFeePoolAddress = GasFeePool.networks[networkId.toString()].address;\n            let DaiAddress = \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\"; //@dev - DAI（Underlying asset）\n            instanceDai = new web3.eth.Contract(\n              Dai.abi,\n              DaiAddress,\n            );\n            console.log('=== instanceDai ===', instanceDai);\n\n            //@dev - Create instance of rDAI-contract\n            let instanceRDai = null;\n            let rDaiAddress = \"0x462303f77a3f17Dbd95eb7bab412FE4937F9B9CB\"; //@dev - rDAI（rDAI proxy contract）\n            instanceRDai = new web3.eth.Contract(\n              rDAI.abi,\n              rDaiAddress,\n            );\n            console.log('=== instanceRDai ===', instanceRDai); \n\n            //@dev - Create instance of RelayHub\n            let instanceRelayHub = null;\n            if (RelayHub.networks) {\n              deployedNetwork = RelayHub.networks[networkId.toString()];\n              if (deployedNetwork) {\n                instanceRelayHub = new web3.eth.Contract(\n                  RelayHub.abi,\n                  deployedNetwork && deployedNetwork.address,\n                );\n                console.log('=== instanceRelayHub ===', instanceRelayHub);\n              }\n            }\n            \n            //@dev - Create instance of RelayerManager\n            let instanceRelayerManager = null;\n            if (RelayerManager.networks) {\n              deployedNetwork = RelayerManager.networks[networkId.toString()];\n              if (deployedNetwork) {\n                instanceRelayerManager = new web3.eth.Contract(\n                   RelayerManager.abi,\n                   deployedNetwork && deployedNetwork.address,\n                );\n                console.log('=== instanceRelayerManager ===', instanceRelayerManager);\n              }\n            }\n            // let instanceRelayerManager = null;\n            // let RelayerManagerAddress = \"0x6651360Ff49cD68c783D4cdC16D7A9C1f13873Eb\"; //@dev - RelayerManager.sol address\n            // instanceRelayerManager = new web3.eth.Contract(\n            //   RelayerManager.abi,\n            //   RelayerManagerAddress,\n            // );\n            // console.log('=== instanceRelayerManager ===', instanceRelayerManager); \n\n            //@dev - Create instance of GasFeePool.sol\n            let instanceMetaTransactionTest = null;\n            let MetaTransactionTestAddress = \"\";\n            if (MetaTransactionTest.networks) {\n              deployedNetwork = MetaTransactionTest.networks[networkId.toString()];\n              if (deployedNetwork) {\n                instanceMetaTransactionTest = new web3.eth.Contract(\n                   MetaTransactionTest.abi,\n                   deployedNetwork && deployedNetwork.address,\n                );\n                console.log('=== instanceMetaTransactionTest ===', instanceMetaTransactionTest);\n\n                MetaTransactionTestAddress = deployedNetwork.address;\n              }\n            }\n            console.log('=== MetaTransactionTestAddress ===', MetaTransactionTestAddress);\n\n            /***\n             * @dev - Definition for Meta-Transaction test\n             **/\n\n            const domainType = [\n              { name: \"name\", type: \"string\" },\n              { name: \"version\", type: \"string\" },\n              { name: \"chainId\", type: \"uint256\" },\n              { name: \"verifyingContract\", type: \"address\" }\n            ];\n\n            const metaTransactionType = [\n              { name: \"nonce\", type: \"uint256\" },\n              { name: \"from\", type: \"address\" },\n              { name: \"functionSignature\", type: \"bytes\" }\n            ];\n\n            let domainData = {\n              name: \"MetaTransactionTest\",\n              version: \"1\",\n              verifyingContract: MetaTransactionTestAddress,\n              verifyingContract: MetaTransactionTestAddress\n            };\n\n            if (GasFeePool || Dai || rDAI || RelayHub || RelayerManager || MetaTransactionTest) {\n              // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n              this.setState({ \n                web3, \n                ganacheAccounts, \n                accounts, \n                balance, \n                networkId, \n                networkType, \n                hotLoaderDisabled,\n                isMetaMask, \n                gas_fee_pool: instanceGasFeePool,\n                dai: instanceDai,\n                rDAI: instanceRDai,\n                gas_fee_pool_address: GasFeePoolAddress,\n                rDAI_address: rDaiAddress,\n                relay_hub: instanceRelayHub,\n                relayer_manager: instanceRelayerManager,\n                meta_transaction_test: instanceMetaTransactionTest,\n                domainType: domainType,\n                metaTransactionType: metaTransactionType,\n                domainData: domainData\n              }, () => {\n                this.refreshValues(\n                  instanceGasFeePool\n                );\n                setInterval(() => {\n                  this.refreshValues(instanceGasFeePool);\n                }, 5000);\n              });\n            } else {\n              this.setState({ web3, ganacheAccounts, accounts, balance, networkId, networkType, hotLoaderDisabled, isMetaMask });\n            }\n          }\n        } catch (error) {\n          // Catch any errors for any of the above operations.\n          alert(\n            `Failed to load web3, accounts, or contract. Check console for details.`,\n          );\n          console.error(error);\n        }\n    }\n\n\n    render() {\n        const { accounts, gas_fee_pool } = this.state;\n\n        return (\n            <div className={styles.widgets}>\n                <Grid container style={{ marginTop: 32 }}>\n                    <Grid item xs={12}>\n                        <Card width={\"auto\"} \n                              maxWidth={\"960px\"} \n                              mx={\"auto\"} \n                              my={5} \n                              p={20} \n                              borderColor={\"#E8E8E8\"}\n                        >\n                            <h4>Meta-Transaction Test</h4> <br />\n\n                            <Table>\n                                <tr>\n                                    <td><p>New Text</p></td>\n                                    <td><Input type=\"text\" placeholder=\"Please input New Text\" value={this.state.valueOfExecuteMetaTransactionTestNewText} onChange={this.handleInputExecuteMetaTransactionTestNewText} /></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.executeMetaTransactionTest}> Execute Meta-Transaction Test </Button></td>\n                                    <td></td>\n                                </tr>\n                            </Table>\n\n                            <br />\n\n                            <Table>\n                                <tr>\n                                    <td><p>New Text</p></td>\n                                    <td><Input type=\"text\" placeholder=\"Please input New Text\" value={this.state.valueOfSetTextNewText} onChange={this.handleInputSetTextNewText} /></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td><Button size={'small'} mt={3} mb={2} onClick={this.setText}> Set Text </Button></td>\n                                    <td></td>\n                                </tr>\n                            </Table>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={4}>\n                    </Grid>\n\n                    <Grid item xs={4}>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n","import React, { Component } from \"react\";\nimport getWeb3, { getGanacheWeb3, Web3 } from \"./utils/getWeb3\";\nimport Header from \"./components/Header/index.js\";\nimport Footer from \"./components/Footer/index.js\";\nimport Hero from \"./components/Hero/index.js\";\nimport Web3Info from \"./components/Web3Info/index.js\";\n\n// GasFeePool\nimport GasFeePool from \"./components/GasFeePool/index.js\";\n\n// MetaTransactionTest\nimport MetaTransactionTest from \"./components/MetaTransactionTest/index2.js\";\n//import MetaTransactionTest from \"./components/MetaTransactionTest/index.js\";\n\nimport { Typography, Grid, TextField } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { theme } from './utils/theme';\nimport { Loader, Button, Card, Input, Heading, Table, Form, Flex, Box, Image, EthAddress } from 'rimble-ui';\nimport { zeppelinSolidityHotLoaderOptions } from '../config/webpack';\n\nimport styles from './App.module.scss';\n//import './App.css';\n\n\n\nclass App extends Component {\n  constructor(props) {    \n    super(props);\n\n    this.state = {\n      /////// Default state\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      route: window.location.pathname.replace(\"/\", \"\")\n    };\n  }\n\n\n\n  ///////--------------------- Functions of testFunc ---------------------------  \n\n\n  //////////////////////////////////// \n  ///// Ganache\n  ////////////////////////////////////\n  getGanacheAddresses = async () => {\n    if (!this.ganacheProvider) {\n      this.ganacheProvider = getGanacheWeb3();\n    }\n    if (this.ganacheProvider) {\n      return await this.ganacheProvider.eth.getAccounts();\n    }\n    return [];\n  }\n\n  componentDidMount = async () => {\n    const hotLoaderDisabled = zeppelinSolidityHotLoaderOptions.disabled;\n \n    let GasFeePool = {};\n    try {\n      GasFeePool = require(\"../../build/contracts/GasFeePool.json\");          // Load artifact-file of GasFeePool\n    } catch (e) {\n      console.log(e);\n    }\n\n    try {\n      const isProd = process.env.NODE_ENV === 'production';\n      if (!isProd) {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        let ganacheAccounts = [];\n\n        try {\n          ganacheAccounts = await this.getGanacheAddresses();\n        } catch (e) {\n          console.log('Ganache is not running');\n        }\n\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const networkType = await web3.eth.net.getNetworkType();\n        const isMetaMask = web3.currentProvider.isMetaMask;\n        let balance = accounts.length > 0 ? await web3.eth.getBalance(accounts[0]): web3.utils.toWei('0');\n        balance = web3.utils.fromWei(balance, 'ether');\n\n        let instanceGasFeePool = null;\n        let deployedNetwork = null;\n\n        // Create instance of contracts\n        if (GasFeePool.networks) {\n          deployedNetwork = GasFeePool.networks[networkId.toString()];\n          if (deployedNetwork) {\n            instanceGasFeePool = new web3.eth.Contract(\n              GasFeePool.abi,\n              deployedNetwork && deployedNetwork.address,\n            );\n            console.log('=== instanceGasFeePool ===', instanceGasFeePool);\n          }\n        }\n\n        if (GasFeePool) {\n          // Set web3, accounts, and contract to the state, and then proceed with an\n          // example of interacting with the contract's methods.\n          this.setState({ \n            web3, \n            ganacheAccounts, \n            accounts, \n            balance, \n            networkId, \n            networkType, \n            hotLoaderDisabled,\n            isMetaMask, \n            gas_fee_pool: instanceGasFeePool\n          }, () => {\n            this.refreshValues(\n              instanceGasFeePool\n            );\n            setInterval(() => {\n              this.refreshValues(instanceGasFeePool);\n            }, 5000);\n          });\n        }\n        else {\n          this.setState({ web3, ganacheAccounts, accounts, balance, networkId, networkType, hotLoaderDisabled, isMetaMask });\n        }\n      }\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  refreshValues = (instanceGasFeePool) => {\n    if (instanceGasFeePool) {\n      console.log('refreshValues of instanceGasFeePool');\n    }\n  }\n\n  renderLoader() {\n    return (\n      <div className={styles.loader}>\n        <Loader size=\"80px\" color=\"red\" />\n        <h3> Loading Web3, accounts, and contract...</h3>\n        <p> Unlock your metamask </p>\n      </div>\n    );\n  }\n\n  renderDeployCheck(instructionsKey) {\n    return (\n      <div className={styles.setup}>\n        <div className={styles.notice}>\n          Your <b> contracts are not deployed</b> in this network. Two potential reasons: <br />\n          <p>\n            Maybe you are in the wrong network? Point Metamask to localhost.<br />\n            You contract is not deployed. Follow the instructions below.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  renderInstructions() {\n    return (\n      <div className={styles.wrapper}>\n        <Hero />\n      </div>\n    );\n  }\n\n  renderGasFeePool() {\n    return (\n      <div className={styles.wrapper}>\n        <GasFeePool />\n      </div>\n    );\n  }\n\n  renderMetaTransactionTest() {\n    return (\n      <div className={styles.wrapper}>\n        <MetaTransactionTest />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={styles.App}>\n        <Header />\n          {this.state.route === '' && this.renderInstructions()}\n          {this.state.route === 'gas-fee-pool' && this.renderGasFeePool()} \n          {this.state.route === 'meta-transaction-test' && this.renderMetaTransactionTest()} \n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './layout/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1M48g\",\"brand\":\"header_brand__u6Ai6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__1kr_x\",\"brand\":\"footer_brand__12Qco\",\"created\":\"footer_created__dpMgr\",\"copyright\":\"footer_copyright__1pBWA\",\"links\":\"footer_links__1m3Rj\"};"],"sourceRoot":""}